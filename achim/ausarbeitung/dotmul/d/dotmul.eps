%!PS-Adobe-2.0 EPSF-2.0
%%Title: dotmul.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Mon Mar 15 21:24:12 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (dotmul.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (achim)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Mar 15 21:24:12 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
756 360 M
63 0 V
6177 0 R
-63 0 V
stroke
684 360 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.001)]
] -40.0 MRshow
1.000 UL
LTb
756 577 M
31 0 V
6209 0 R
-31 0 V
756 863 M
31 0 V
6209 0 R
-31 0 V
756 1010 M
31 0 V
6209 0 R
-31 0 V
756 1080 M
63 0 V
6177 0 R
-63 0 V
stroke
684 1080 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.01)]
] -40.0 MRshow
1.000 UL
LTb
756 1297 M
31 0 V
6209 0 R
-31 0 V
756 1583 M
31 0 V
6209 0 R
-31 0 V
756 1730 M
31 0 V
6209 0 R
-31 0 V
756 1800 M
63 0 V
6177 0 R
-63 0 V
stroke
684 1800 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.1)]
] -40.0 MRshow
1.000 UL
LTb
756 2017 M
31 0 V
6209 0 R
-31 0 V
756 2303 M
31 0 V
6209 0 R
-31 0 V
756 2450 M
31 0 V
6209 0 R
-31 0 V
756 2520 M
63 0 V
6177 0 R
-63 0 V
stroke
684 2520 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
756 2737 M
31 0 V
6209 0 R
-31 0 V
756 3023 M
31 0 V
6209 0 R
-31 0 V
756 3170 M
31 0 V
6209 0 R
-31 0 V
756 3240 M
63 0 V
6177 0 R
-63 0 V
stroke
684 3240 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 10)]
] -40.0 MRshow
1.000 UL
LTb
756 3457 M
31 0 V
6209 0 R
-31 0 V
756 3743 M
31 0 V
6209 0 R
-31 0 V
756 3890 M
31 0 V
6209 0 R
-31 0 V
756 3960 M
63 0 V
6177 0 R
-63 0 V
stroke
684 3960 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 100)]
] -40.0 MRshow
1.000 UL
LTb
756 4177 M
31 0 V
6209 0 R
-31 0 V
756 4463 M
31 0 V
6209 0 R
-31 0 V
756 4610 M
31 0 V
6209 0 R
-31 0 V
756 4680 M
63 0 V
6177 0 R
-63 0 V
stroke
684 4680 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1000)]
] -40.0 MRshow
1.000 UL
LTb
756 360 M
0 63 V
0 4257 R
0 -63 V
stroke
756 240 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 10)]
] -40.0 MCshow
1.000 UL
LTb
1024 360 M
0 31 V
0 4289 R
0 -31 V
1379 360 M
0 31 V
0 4289 R
0 -31 V
1561 360 M
0 31 V
0 4289 R
0 -31 V
1647 360 M
0 63 V
0 4257 R
0 -63 V
stroke
1647 240 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 100)]
] -40.0 MCshow
1.000 UL
LTb
1916 360 M
0 31 V
0 4289 R
0 -31 V
2271 360 M
0 31 V
0 4289 R
0 -31 V
2452 360 M
0 31 V
0 4289 R
0 -31 V
2539 360 M
0 63 V
0 4257 R
0 -63 V
stroke
2539 240 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1000)]
] -40.0 MCshow
1.000 UL
LTb
2807 360 M
0 31 V
0 4289 R
0 -31 V
3162 360 M
0 31 V
0 4289 R
0 -31 V
3344 360 M
0 31 V
0 4289 R
0 -31 V
3430 360 M
0 63 V
0 4257 R
0 -63 V
stroke
3430 240 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 10000)]
] -40.0 MCshow
1.000 UL
LTb
3699 360 M
0 31 V
0 4289 R
0 -31 V
4053 360 M
0 31 V
0 4289 R
0 -31 V
4235 360 M
0 31 V
0 4289 R
0 -31 V
4322 360 M
0 63 V
0 4257 R
0 -63 V
stroke
4322 240 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 100000)]
] -40.0 MCshow
1.000 UL
LTb
4590 360 M
0 31 V
0 4289 R
0 -31 V
4945 360 M
0 31 V
0 4289 R
0 -31 V
5127 360 M
0 31 V
0 4289 R
0 -31 V
5213 360 M
0 63 V
0 4257 R
0 -63 V
stroke
5213 240 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1e+06)]
] -40.0 MCshow
1.000 UL
LTb
5481 360 M
0 31 V
0 4289 R
0 -31 V
5836 360 M
0 31 V
0 4289 R
0 -31 V
6018 360 M
0 31 V
0 4289 R
0 -31 V
6105 360 M
0 63 V
0 4257 R
0 -63 V
stroke
6105 240 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1e+07)]
] -40.0 MCshow
1.000 UL
LTb
6373 360 M
0 31 V
0 4289 R
0 -31 V
6728 360 M
0 31 V
0 4289 R
0 -31 V
6910 360 M
0 31 V
0 4289 R
0 -31 V
6996 360 M
0 63 V
0 4257 R
0 -63 V
stroke
6996 240 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1e+08)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
756 4680 N
756 360 L
6240 0 V
0 4320 V
-6240 0 V
Z stroke
LCb setrgbcolor
120 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 120.0 0.0 true true 0 (Ausfuehrungszeit / ms )]
] -40.0 MCshow
grestore
LTb
LCb setrgbcolor
3876 60 M
[ [(Helvetica) 120.0 0.0 true true 0 (N)]
] -40.0 MCshow
LTb
3876 4860 M
[ [(Helvetica) 120.0 0.0 true true 0 (Skalarprodukt in double-precision, Tesla C1060)]
] -40.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6429 4557 M
[ [(Helvetica) 120.0 0.0 true true 0 (GPU)]
] -40.0 MRshow
LT0
6501 4557 M
351 0 V
756 1767 M
268 -244 V
157 2 V
112 -2 V
86 5 V
71 -6 V
59 -2 V
52 0 V
46 2 V
40 0 V
269 -4 V
157 2 V
111 -3 V
87 3 V
70 33 V
60 -26 V
51 -1 V
46 -6 V
41 4 V
268 3 V
157 44 V
112 -48 V
86 188 V
71 -146 V
59 -28 V
52 8 V
45 2 V
41 25 V
269 6 V
157 6 V
111 51 V
86 23 V
71 27 V
60 35 V
51 -18 V
46 86 V
41 -35 V
268 112 V
157 74 V
111 30 V
87 45 V
70 37 V
60 34 V
52 40 V
45 24 V
41 27 V
268 175 V
157 119 V
112 84 V
86 56 V
71 59 V
59 45 V
52 37 V
46 41 V
41 36 V
268 205 V
157 126 V
756 1767 Pls
1024 1523 Pls
1181 1525 Pls
1293 1523 Pls
1379 1528 Pls
1450 1522 Pls
1509 1520 Pls
1561 1520 Pls
1607 1522 Pls
1647 1522 Pls
1916 1518 Pls
2073 1520 Pls
2184 1517 Pls
2271 1520 Pls
2341 1553 Pls
2401 1527 Pls
2452 1526 Pls
2498 1520 Pls
2539 1524 Pls
2807 1527 Pls
2964 1571 Pls
3076 1523 Pls
3162 1711 Pls
3233 1565 Pls
3292 1537 Pls
3344 1545 Pls
3389 1547 Pls
3430 1572 Pls
3699 1578 Pls
3856 1584 Pls
3967 1635 Pls
4053 1658 Pls
4124 1685 Pls
4184 1720 Pls
4235 1702 Pls
4281 1788 Pls
4322 1753 Pls
4590 1865 Pls
4747 1939 Pls
4858 1969 Pls
4945 2014 Pls
5015 2051 Pls
5075 2085 Pls
5127 2125 Pls
5172 2149 Pls
5213 2176 Pls
5481 2351 Pls
5638 2470 Pls
5750 2554 Pls
5836 2610 Pls
5907 2669 Pls
5966 2714 Pls
6018 2751 Pls
6064 2792 Pls
6105 2828 Pls
6373 3033 Pls
6530 3159 Pls
6676 4557 Pls
1.000 UP
1.000 UL
LT2
LTb
6429 4437 M
[ [(Helvetica) 120.0 0.0 true true 0 (CPU)]
] -40.0 MRshow
LT2
6501 4437 M
351 0 V
756 824 M
268 -13 V
157 0 V
112 11 V
86 -4 V
71 2 V
59 -12 V
52 14 V
46 -4 V
40 -10 V
269 12 V
157 4 V
111 -2 V
87 -11 V
70 2 V
60 7 V
51 -7 V
46 143 V
41 6 V
268 187 V
157 103 V
112 84 V
86 75 V
71 67 V
59 -20 V
52 78 V
45 38 V
41 13 V
269 236 V
157 116 V
111 93 V
86 68 V
71 58 V
60 45 V
51 43 V
46 47 V
41 41 V
268 239 V
157 139 V
111 95 V
87 81 V
70 57 V
60 52 V
52 69 V
45 14 V
41 34 V
268 216 V
157 128 V
112 119 V
86 40 V
71 57 V
59 51 V
52 87 V
46 -7 V
41 34 V
268 241 V
157 118 V
756 824 Star
1024 811 Star
1181 811 Star
1293 822 Star
1379 818 Star
1450 820 Star
1509 808 Star
1561 822 Star
1607 818 Star
1647 808 Star
1916 820 Star
2073 824 Star
2184 822 Star
2271 811 Star
2341 813 Star
2401 820 Star
2452 813 Star
2498 956 Star
2539 962 Star
2807 1149 Star
2964 1252 Star
3076 1336 Star
3162 1411 Star
3233 1478 Star
3292 1458 Star
3344 1536 Star
3389 1574 Star
3430 1587 Star
3699 1823 Star
3856 1939 Star
3967 2032 Star
4053 2100 Star
4124 2158 Star
4184 2203 Star
4235 2246 Star
4281 2293 Star
4322 2334 Star
4590 2573 Star
4747 2712 Star
4858 2807 Star
4945 2888 Star
5015 2945 Star
5075 2997 Star
5127 3066 Star
5172 3080 Star
5213 3114 Star
5481 3330 Star
5638 3458 Star
5750 3577 Star
5836 3617 Star
5907 3674 Star
5966 3725 Star
6018 3812 Star
6064 3805 Star
6105 3839 Star
6373 4080 Star
6530 4198 Star
6676 4437 Star
1.000 UL
LTb
756 4680 N
756 360 L
6240 0 V
0 4320 V
-6240 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
