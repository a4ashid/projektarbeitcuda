%!PS-Adobe-2.0 EPSF-2.0
%%Title: dotmul.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sat Mar 13 20:33:08 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (dotmul.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (achim)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar 13 20:33:08 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
546 420 M
( 0) Rshow
1.000 UL
LTb
630 840 M
63 0 V
6269 0 R
-63 0 V
546 840 M
( 5) Rshow
1.000 UL
LTb
630 1260 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 10) Rshow
1.000 UL
LTb
630 1680 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 15) Rshow
1.000 UL
LTb
630 2100 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 20) Rshow
1.000 UL
LTb
630 2520 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 25) Rshow
1.000 UL
LTb
630 2940 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 30) Rshow
1.000 UL
LTb
630 3360 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 35) Rshow
1.000 UL
LTb
630 3780 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 40) Rshow
1.000 UL
LTb
630 4200 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 45) Rshow
1.000 UL
LTb
630 4620 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 50) Rshow
1.000 UL
LTb
630 420 M
0 63 V
0 4137 R
0 -63 V
630 280 M
( 0) Cshow
1.000 UL
LTb
1334 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 1e+06) Cshow
1.000 UL
LTb
2037 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 2e+06) Cshow
1.000 UL
LTb
2741 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 3e+06) Cshow
1.000 UL
LTb
3444 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 4e+06) Cshow
1.000 UL
LTb
4148 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 5e+06) Cshow
1.000 UL
LTb
4851 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 6e+06) Cshow
1.000 UL
LTb
5555 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 7e+06) Cshow
1.000 UL
LTb
6258 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 8e+06) Cshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
( 9e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
630 4620 N
630 420 L
6332 0 V
0 4200 V
-6332 0 V
Z stroke
LCb setrgbcolor
140 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(Zeit/ms) Cshow
grestore
LTb
LCb setrgbcolor
3796 70 M
(N) Cshow
LTb
3796 4830 M
(Skalarprodukt) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
(GPU) Rshow
LT0
6395 4487 M
399 0 V
630 424 M
0 -1 V
1 0 V
1 0 V
1 0 V
1 1 V
0 -1 V
1 2 V
1 -1 V
0 1 V
1 -1 V
7 1 V
7 1 V
7 2 V
7 1 V
7 1 V
7 1 V
7 3 V
7 1 V
7 0 V
71 12 V
70 12 V
70 12 V
71 12 V
70 11 V
70 11 V
71 12 V
70 11 V
71 10 V
703 119 V
704 106 V
703 127 V
704 116 V
703 108 V
704 120 V
703 106 V
704 135 V
630 424 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
630 423 Star
631 423 Star
631 423 Star
631 423 Star
631 423 Star
632 423 Star
633 423 Star
634 424 Star
634 423 Star
635 425 Star
636 424 Star
636 425 Star
637 424 Star
644 425 Star
651 426 Star
658 428 Star
665 429 Star
672 430 Star
679 431 Star
686 434 Star
693 435 Star
700 435 Star
771 447 Star
841 459 Star
911 471 Star
982 483 Star
1052 494 Star
1122 505 Star
1193 517 Star
1263 528 Star
1334 538 Star
2037 657 Star
2741 763 Star
3444 890 Star
4148 1006 Star
4851 1114 Star
5555 1234 Star
6258 1340 Star
6962 1475 Star
6594 4487 Star
1.000 UP
1.000 UL
LT2
LTb
6311 4347 M
(CPU) Rshow
LT2
6395 4347 M
399 0 V
630 420 M
1 0 V
0 1 V
1 0 V
1 1 V
1 0 V
1 1 V
1 0 V
0 1 V
1 0 V
7 4 V
7 4 V
7 4 V
7 3 V
7 4 V
7 5 V
7 4 V
7 5 V
7 5 V
71 42 V
70 44 V
70 42 V
71 42 V
70 43 V
70 44 V
71 40 V
70 44 V
71 41 V
703 425 V
704 431 V
703 402 V
704 444 V
703 400 V
704 444 V
703 344 V
704 487 V
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
631 420 Star
631 421 Star
631 421 Star
631 421 Star
632 421 Star
633 422 Star
634 422 Star
634 422 Star
635 423 Star
636 423 Star
636 424 Star
637 424 Star
644 428 Star
651 432 Star
658 436 Star
665 439 Star
672 443 Star
679 448 Star
686 452 Star
693 457 Star
700 462 Star
771 504 Star
841 548 Star
911 590 Star
982 632 Star
1052 675 Star
1122 719 Star
1193 759 Star
1263 803 Star
1334 844 Star
2037 1269 Star
2741 1700 Star
3444 2102 Star
4148 2546 Star
4851 2946 Star
5555 3390 Star
6258 3734 Star
6962 4221 Star
6594 4347 Star
1.000 UL
LTb
630 4620 N
630 420 L
6332 0 V
0 4200 V
-6332 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
4109 0 R
-63 0 V
546 420 M
( 0) Rshow
1.000 UL
LTb
630 1042 M
63 0 V
4109 0 R
-63 0 V
-4193 0 R
( 5) Rshow
1.000 UL
LTb
630 1663 M
63 0 V
4109 0 R
-63 0 V
-4193 0 R
( 10) Rshow
1.000 UL
LTb
630 2285 M
63 0 V
4109 0 R
-63 0 V
-4193 0 R
( 15) Rshow
1.000 UL
LTb
630 2906 M
63 0 V
4109 0 R
-63 0 V
-4193 0 R
( 20) Rshow
1.000 UL
LTb
630 3528 M
63 0 V
4109 0 R
-63 0 V
-4193 0 R
( 25) Rshow
1.000 UL
LTb
630 4150 M
63 0 V
4109 0 R
-63 0 V
-4193 0 R
( 30) Rshow
1.000 UL
LTb
630 4771 M
63 0 V
4109 0 R
-63 0 V
-4193 0 R
( 35) Rshow
1.000 UL
LTb
630 5393 M
63 0 V
4109 0 R
-63 0 V
-4193 0 R
( 40) Rshow
1.000 UL
LTb
630 6014 M
63 0 V
4109 0 R
-63 0 V
-4193 0 R
( 45) Rshow
1.000 UL
LTb
630 6636 M
63 0 V
4109 0 R
-63 0 V
-4193 0 R
( 50) Rshow
1.000 UL
LTb
630 420 M
0 63 V
0 6153 R
0 -63 V
630 280 M
( 0) Cshow
1.000 UL
LTb
1094 420 M
0 63 V
0 6153 R
0 -63 V
0 -6293 R
( 1e+06) Cshow
1.000 UL
LTb
1557 420 M
0 63 V
0 6153 R
0 -63 V
0 -6293 R
( 2e+06) Cshow
1.000 UL
LTb
2021 420 M
0 63 V
0 6153 R
0 -63 V
0 -6293 R
( 3e+06) Cshow
1.000 UL
LTb
2484 420 M
0 63 V
0 6153 R
0 -63 V
0 -6293 R
( 4e+06) Cshow
1.000 UL
LTb
2948 420 M
0 63 V
0 6153 R
0 -63 V
0 -6293 R
( 5e+06) Cshow
1.000 UL
LTb
3411 420 M
0 63 V
0 6153 R
0 -63 V
0 -6293 R
( 6e+06) Cshow
1.000 UL
LTb
3875 420 M
0 63 V
0 6153 R
0 -63 V
0 -6293 R
( 7e+06) Cshow
1.000 UL
LTb
4338 420 M
0 63 V
0 6153 R
0 -63 V
0 -6293 R
( 8e+06) Cshow
1.000 UL
LTb
4802 420 M
0 63 V
0 6153 R
0 -63 V
0 -6293 R
( 9e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
630 6636 N
630 420 L
4172 0 V
0 6216 V
-4172 0 V
Z stroke
LCb setrgbcolor
140 3528 M
currentpoint gsave translate 90 rotate 0 0 M
(Zeit/ms) Cshow
grestore
LTb
LCb setrgbcolor
2716 70 M
(N) Cshow
LTb
2716 6846 M
(Skalarprodukt) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
4151 6503 M
(GPU) Rshow
LT0
4235 6503 M
399 0 V
630 426 M
0 -2 V
1 0 V
0 1 V
1 -1 V
0 2 V
1 -1 V
0 2 V
1 -2 V
0 3 V
1 -2 V
4 1 V
5 2 V
5 2 V
4 2 V
5 2 V
4 2 V
5 3 V
5 2 V
4 1 V
47 17 V
46 18 V
46 17 V
47 19 V
46 15 V
46 18 V
47 16 V
46 16 V
47 16 V
463 175 V
464 158 V
463 188 V
464 171 V
463 160 V
464 178 V
463 157 V
464 200 V
630 426 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
630 424 Star
631 424 Star
631 425 Star
632 424 Star
632 426 Star
633 425 Star
633 427 Star
634 425 Star
634 428 Star
635 426 Star
639 427 Star
644 429 Star
649 431 Star
653 433 Star
658 435 Star
662 437 Star
667 440 Star
672 442 Star
676 443 Star
723 460 Star
769 478 Star
815 495 Star
862 514 Star
908 529 Star
954 547 Star
1001 563 Star
1047 579 Star
1094 595 Star
1557 770 Star
2021 928 Star
2484 1116 Star
2948 1287 Star
3411 1447 Star
3875 1625 Star
4338 1782 Star
4802 1982 Star
4434 6503 Star
1.000 UP
1.000 UL
LT2
LTb
4151 6363 M
(CPU) Rshow
LT2
4235 6363 M
399 0 V
630 420 M
0 1 V
1 0 V
0 1 V
1 0 V
0 1 V
1 1 V
1 1 V
0 1 V
1 0 V
4 6 V
5 6 V
5 5 V
4 6 V
5 6 V
4 6 V
5 6 V
5 7 V
4 8 V
47 63 V
46 64 V
46 63 V
47 61 V
46 65 V
46 65 V
47 59 V
46 65 V
47 60 V
463 630 V
464 637 V
463 595 V
464 658 V
463 591 V
464 658 V
463 509 V
464 720 V
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 420 Star
630 421 Star
630 421 Star
631 421 Star
631 422 Star
632 422 Star
632 423 Star
633 424 Star
633 424 Star
634 425 Star
634 426 Star
635 426 Star
639 432 Star
644 438 Star
649 443 Star
653 449 Star
658 455 Star
662 461 Star
667 467 Star
672 474 Star
676 482 Star
723 545 Star
769 609 Star
815 672 Star
862 733 Star
908 798 Star
954 863 Star
1001 922 Star
1047 987 Star
1094 1047 Star
1557 1677 Star
2021 2314 Star
2484 2909 Star
2948 3567 Star
3411 4158 Star
3875 4816 Star
4338 5325 Star
4802 6045 Star
4434 6363 Star
1.000 UL
LTb
630 6636 N
630 420 L
4172 0 V
0 6216 V
-4172 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%!PS-Adobe-2.0 EPSF-2.0
%%Title: dotmul.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sat Mar 13 20:42:27 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 301 402
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (dotmul.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (achim)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar 13 20:42:27 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
720 480 M
63 0 V
3985 0 R
-63 0 V
624 480 M
( 0) Rshow
1.000 UL
LTb
720 1090 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 5) Rshow
1.000 UL
LTb
720 1699 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 10) Rshow
1.000 UL
LTb
720 2309 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 15) Rshow
1.000 UL
LTb
720 2918 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 20) Rshow
1.000 UL
LTb
720 3528 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 25) Rshow
1.000 UL
LTb
720 4138 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 30) Rshow
1.000 UL
LTb
720 4747 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 35) Rshow
1.000 UL
LTb
720 5357 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 40) Rshow
1.000 UL
LTb
720 5966 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 45) Rshow
1.000 UL
LTb
720 6576 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 50) Rshow
1.000 UL
LTb
720 480 M
0 63 V
0 6033 R
0 -63 V
720 320 M
( 0) Cshow
1.000 UL
LTb
1170 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 1e+06) Cshow
1.000 UL
LTb
1620 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 2e+06) Cshow
1.000 UL
LTb
2069 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 3e+06) Cshow
1.000 UL
LTb
2519 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 4e+06) Cshow
1.000 UL
LTb
2969 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 5e+06) Cshow
1.000 UL
LTb
3419 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 6e+06) Cshow
1.000 UL
LTb
3868 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 7e+06) Cshow
1.000 UL
LTb
4318 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 8e+06) Cshow
1.000 UL
LTb
4768 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 9e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
720 6576 N
720 480 L
4048 0 V
0 6096 V
-4048 0 V
Z stroke
LCb setrgbcolor
160 3528 M
currentpoint gsave translate 90 rotate 0 0 M
(Zeit/ms) Cshow
grestore
LTb
LCb setrgbcolor
2744 80 M
(N) Cshow
LTb
2744 6816 M
(Skalarprodukt) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
4033 6433 M
(GPU) Rshow
LT0
4129 6433 M
447 0 V
720 486 M
0 -2 V
1 0 V
0 1 V
1 -1 V
0 2 V
1 -1 V
0 2 V
1 -2 V
0 2 V
0 -2 V
5 2 V
4 2 V
5 2 V
4 2 V
5 2 V
4 2 V
5 3 V
4 1 V
5 1 V
45 18 V
45 17 V
45 17 V
45 18 V
45 15 V
45 17 V
45 16 V
45 16 V
45 15 V
450 172 V
449 155 V
450 185 V
450 167 V
450 157 V
449 175 V
450 154 V
450 196 V
720 486 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
720 484 Star
721 484 Star
721 485 Star
722 484 Star
722 486 Star
723 485 Star
723 487 Star
724 485 Star
724 487 Star
724 485 Star
729 487 Star
733 489 Star
738 491 Star
742 493 Star
747 495 Star
751 497 Star
756 500 Star
760 501 Star
765 502 Star
810 520 Star
855 537 Star
900 554 Star
945 572 Star
990 587 Star
1035 604 Star
1080 620 Star
1125 636 Star
1170 651 Star
1620 823 Star
2069 978 Star
2519 1163 Star
2969 1330 Star
3419 1487 Star
3868 1662 Star
4318 1816 Star
4768 2012 Star
4352 6433 Star
1.000 UP
1.000 UL
LT2
LTb
4033 6273 M
(CPU) Rshow
LT2
4129 6273 M
447 0 V
720 480 M
0 1 V
1 0 V
0 1 V
1 0 V
0 1 V
1 1 V
1 1 V
0 1 V
5 5 V
4 6 V
5 6 V
4 5 V
5 6 V
4 6 V
5 6 V
4 7 V
5 7 V
45 62 V
45 64 V
45 61 V
45 60 V
45 64 V
45 63 V
45 58 V
45 64 V
45 59 V
450 618 V
449 624 V
450 584 V
450 645 V
450 580 V
449 645 V
450 500 V
450 705 V
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 480 Star
720 481 Star
720 481 Star
721 481 Star
721 482 Star
722 482 Star
722 483 Star
723 484 Star
723 484 Star
724 485 Star
724 485 Star
724 486 Star
729 491 Star
733 497 Star
738 503 Star
742 508 Star
747 514 Star
751 520 Star
756 526 Star
760 533 Star
765 540 Star
810 602 Star
855 666 Star
900 727 Star
945 787 Star
990 851 Star
1035 914 Star
1080 972 Star
1125 1036 Star
1170 1095 Star
1620 1713 Star
2069 2337 Star
2519 2921 Star
2969 3566 Star
3419 4146 Star
3868 4791 Star
4318 5291 Star
4768 5996 Star
4352 6273 Star
1.000 UL
LTb
720 6576 N
720 480 L
4048 0 V
0 6096 V
-4048 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
720 480 M
63 0 V
3985 0 R
-63 0 V
624 480 M
( 0) Rshow
1.000 UL
LTb
720 1351 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 2) Rshow
1.000 UL
LTb
720 2222 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 4) Rshow
1.000 UL
LTb
720 3093 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 6) Rshow
1.000 UL
LTb
720 3963 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 8) Rshow
1.000 UL
LTb
720 4834 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 10) Rshow
1.000 UL
LTb
720 5705 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 12) Rshow
1.000 UL
LTb
720 6576 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 14) Rshow
1.000 UL
LTb
720 480 M
0 63 V
0 6033 R
0 -63 V
720 320 M
( 0) Cshow
1.000 UL
LTb
1170 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 1e+06) Cshow
1.000 UL
LTb
1620 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 2e+06) Cshow
1.000 UL
LTb
2069 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 3e+06) Cshow
1.000 UL
LTb
2519 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 4e+06) Cshow
1.000 UL
LTb
2969 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 5e+06) Cshow
1.000 UL
LTb
3419 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 6e+06) Cshow
1.000 UL
LTb
3868 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 7e+06) Cshow
1.000 UL
LTb
4318 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 8e+06) Cshow
1.000 UL
LTb
4768 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 9e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
720 6576 N
720 480 L
4048 0 V
0 6096 V
-4048 0 V
Z stroke
LCb setrgbcolor
160 3528 M
currentpoint gsave translate 90 rotate 0 0 M
(Zeit/ms) Cshow
grestore
LTb
LCb setrgbcolor
2744 80 M
(N) Cshow
LTb
2744 6816 M
(Skalarprodukt) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
4033 6433 M
(GPU) Rshow
LT0
720 502 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 495 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 493 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 495 Pls
721 495 Pls
721 498 Pls
722 495 Pls
722 501 Pls
723 497 Pls
723 504 Pls
724 498 Pls
724 507 Pls
724 500 Pls
729 506 Pls
733 512 Pls
738 520 Pls
742 525 Pls
747 533 Pls
751 540 Pls
756 551 Pls
760 556 Pls
765 560 Pls
810 621 Pls
855 684 Pls
900 743 Pls
945 809 Pls
990 862 Pls
1035 923 Pls
1080 981 Pls
1125 1038 Pls
1170 1092 Pls
1620 1706 Pls
2069 2258 Pls
2519 2918 Pls
2969 3516 Pls
3419 4078 Pls
3868 4701 Pls
4318 5251 Pls
4768 5950 Pls
4352 6433 Pls
1.000 UL
LTb
720 6576 N
720 480 L
4048 0 V
0 6096 V
-4048 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
720 480 M
63 0 V
3985 0 R
-63 0 V
624 480 M
( 0) Rshow
1.000 UL
LTb
720 1351 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 2) Rshow
1.000 UL
LTb
720 2222 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 4) Rshow
1.000 UL
LTb
720 3093 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 6) Rshow
1.000 UL
LTb
720 3963 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 8) Rshow
1.000 UL
LTb
720 4834 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 10) Rshow
1.000 UL
LTb
720 5705 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 12) Rshow
1.000 UL
LTb
720 6576 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 14) Rshow
1.000 UL
LTb
720 480 M
0 63 V
0 6033 R
0 -63 V
720 320 M
( 0) Cshow
1.000 UL
LTb
1170 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 1e+06) Cshow
1.000 UL
LTb
1620 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 2e+06) Cshow
1.000 UL
LTb
2069 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 3e+06) Cshow
1.000 UL
LTb
2519 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 4e+06) Cshow
1.000 UL
LTb
2969 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 5e+06) Cshow
1.000 UL
LTb
3419 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 6e+06) Cshow
1.000 UL
LTb
3868 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 7e+06) Cshow
1.000 UL
LTb
4318 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 8e+06) Cshow
1.000 UL
LTb
4768 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 9e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
720 6576 N
720 480 L
4048 0 V
0 6096 V
-4048 0 V
Z stroke
LCb setrgbcolor
160 3528 M
currentpoint gsave translate 90 rotate 0 0 M
(Zeit/ms) Cshow
grestore
LTb
LCb setrgbcolor
2744 80 M
(N) Cshow
LTb
2744 6816 M
(Skalarprodukt) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
4033 6433 M
(GPU) Rshow
LT0
720 502 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 495 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 493 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 495 Pls
721 495 Pls
721 498 Pls
722 495 Pls
722 501 Pls
723 497 Pls
723 504 Pls
724 498 Pls
724 507 Pls
724 500 Pls
729 506 Pls
733 512 Pls
738 520 Pls
742 525 Pls
747 533 Pls
751 540 Pls
756 551 Pls
760 556 Pls
765 560 Pls
810 621 Pls
855 684 Pls
900 743 Pls
945 809 Pls
990 862 Pls
1035 923 Pls
1080 981 Pls
1125 1038 Pls
1170 1092 Pls
1620 1706 Pls
2069 2258 Pls
2519 2918 Pls
2969 3516 Pls
3419 4078 Pls
3868 4701 Pls
4318 5251 Pls
4768 5950 Pls
4352 6433 Pls
1.000 UL
LTb
720 6576 N
720 480 L
4048 0 V
0 6096 V
-4048 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
720 480 M
63 0 V
3985 0 R
-63 0 V
624 480 M
( 0) Rshow
1.000 UL
LTb
720 1351 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 2) Rshow
1.000 UL
LTb
720 2222 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 4) Rshow
1.000 UL
LTb
720 3093 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 6) Rshow
1.000 UL
LTb
720 3963 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 8) Rshow
1.000 UL
LTb
720 4834 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 10) Rshow
1.000 UL
LTb
720 5705 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 12) Rshow
1.000 UL
LTb
720 6576 M
63 0 V
3985 0 R
-63 0 V
-4081 0 R
( 14) Rshow
1.000 UL
LTb
720 480 M
0 63 V
0 6033 R
0 -63 V
720 320 M
( 0) Cshow
1.000 UL
LTb
1170 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 1e+06) Cshow
1.000 UL
LTb
1620 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 2e+06) Cshow
1.000 UL
LTb
2069 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 3e+06) Cshow
1.000 UL
LTb
2519 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 4e+06) Cshow
1.000 UL
LTb
2969 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 5e+06) Cshow
1.000 UL
LTb
3419 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 6e+06) Cshow
1.000 UL
LTb
3868 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 7e+06) Cshow
1.000 UL
LTb
4318 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 8e+06) Cshow
1.000 UL
LTb
4768 480 M
0 63 V
0 6033 R
0 -63 V
0 -6193 R
( 9e+06) Cshow
1.000 UL
LTb
1.000 UL
LTb
720 6576 N
720 480 L
4048 0 V
0 6096 V
-4048 0 V
Z stroke
LCb setrgbcolor
/Helvetica findfont 180 scalefont setfont
160 3528 M
currentpoint gsave translate 90 rotate 0 0 M
(Zeit/ms) Cshow
grestore
/Helvetica findfont 160 scalefont setfont
LTb
LCb setrgbcolor
/Helvetica findfont 180 scalefont setfont
2744 80 M
(N) Cshow
/Helvetica findfont 160 scalefont setfont
LTb
2744 6816 M
(Skalarprodukt) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
4033 6433 M
(GPU) Rshow
LT0
720 502 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 495 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 493 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 495 Pls
721 495 Pls
721 498 Pls
722 495 Pls
722 501 Pls
723 497 Pls
723 504 Pls
724 498 Pls
724 507 Pls
724 500 Pls
729 506 Pls
733 512 Pls
738 520 Pls
742 525 Pls
747 533 Pls
751 540 Pls
756 551 Pls
760 556 Pls
765 560 Pls
810 621 Pls
855 684 Pls
900 743 Pls
945 809 Pls
990 862 Pls
1035 923 Pls
1080 981 Pls
1125 1038 Pls
1170 1092 Pls
1620 1706 Pls
2069 2258 Pls
2519 2918 Pls
2969 3516 Pls
3419 4078 Pls
3868 4701 Pls
4318 5251 Pls
4768 5950 Pls
4352 6433 Pls
1.000 UL
LTb
720 6576 N
720 480 L
4048 0 V
0 6096 V
-4048 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%!PS-Adobe-2.0 EPSF-2.0
%%Title: dotmul.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sat Mar 13 20:44:55 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 301 402
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (dotmul.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (achim)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar 13 20:44:55 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
720 480 M
63 0 V
3985 0 R
-63 0 V
stroke
624 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MRshow
1.000 UL
LTb
720 1351 M
63 0 V
3985 0 R
-63 0 V
stroke
624 1351 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 2)]
] -53.3 MRshow
1.000 UL
LTb
720 2222 M
63 0 V
3985 0 R
-63 0 V
stroke
624 2222 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 4)]
] -53.3 MRshow
1.000 UL
LTb
720 3093 M
63 0 V
3985 0 R
-63 0 V
stroke
624 3093 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 6)]
] -53.3 MRshow
1.000 UL
LTb
720 3963 M
63 0 V
3985 0 R
-63 0 V
stroke
624 3963 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 8)]
] -53.3 MRshow
1.000 UL
LTb
720 4834 M
63 0 V
3985 0 R
-63 0 V
stroke
624 4834 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 10)]
] -53.3 MRshow
1.000 UL
LTb
720 5705 M
63 0 V
3985 0 R
-63 0 V
stroke
624 5705 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 12)]
] -53.3 MRshow
1.000 UL
LTb
720 6576 M
63 0 V
3985 0 R
-63 0 V
stroke
624 6576 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 14)]
] -53.3 MRshow
1.000 UL
LTb
720 480 M
0 63 V
0 6033 R
0 -63 V
stroke
720 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1170 480 M
0 63 V
0 6033 R
0 -63 V
stroke
1170 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1e+06)]
] -53.3 MCshow
1.000 UL
LTb
1620 480 M
0 63 V
0 6033 R
0 -63 V
stroke
1620 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 2e+06)]
] -53.3 MCshow
1.000 UL
LTb
2069 480 M
0 63 V
0 6033 R
0 -63 V
stroke
2069 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 3e+06)]
] -53.3 MCshow
1.000 UL
LTb
2519 480 M
0 63 V
0 6033 R
0 -63 V
stroke
2519 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 4e+06)]
] -53.3 MCshow
1.000 UL
LTb
2969 480 M
0 63 V
0 6033 R
0 -63 V
stroke
2969 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 5e+06)]
] -53.3 MCshow
1.000 UL
LTb
3419 480 M
0 63 V
0 6033 R
0 -63 V
stroke
3419 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 6e+06)]
] -53.3 MCshow
1.000 UL
LTb
3868 480 M
0 63 V
0 6033 R
0 -63 V
stroke
3868 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 7e+06)]
] -53.3 MCshow
1.000 UL
LTb
4318 480 M
0 63 V
0 6033 R
0 -63 V
stroke
4318 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 8e+06)]
] -53.3 MCshow
1.000 UL
LTb
4768 480 M
0 63 V
0 6033 R
0 -63 V
stroke
4768 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 9e+06)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
720 6576 N
720 480 L
4048 0 V
0 6096 V
-4048 0 V
Z stroke
LCb setrgbcolor
160 3528 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (Zeit/ms)]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
2744 80 M
[ [(Helvetica) 180.0 0.0 true true 0 (N)]
] -60.0 MCshow
LTb
2744 6816 M
[ [(Helvetica) 160.0 0.0 true true 0 (Skalarprodukt)]
] -53.3 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
4033 6433 M
[ [(Helvetica) 160.0 0.0 true true 0 (GPU)]
] -53.3 MRshow
LT0
720 502 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 495 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 493 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 494 Pls
720 495 Pls
721 495 Pls
721 498 Pls
722 495 Pls
722 501 Pls
723 497 Pls
723 504 Pls
724 498 Pls
724 507 Pls
724 500 Pls
729 506 Pls
733 512 Pls
738 520 Pls
742 525 Pls
747 533 Pls
751 540 Pls
756 551 Pls
760 556 Pls
765 560 Pls
810 621 Pls
855 684 Pls
900 743 Pls
945 809 Pls
990 862 Pls
1035 923 Pls
1080 981 Pls
1125 1038 Pls
1170 1092 Pls
1620 1706 Pls
2069 2258 Pls
2519 2918 Pls
2969 3516 Pls
3419 4078 Pls
3868 4701 Pls
4318 5251 Pls
4768 5950 Pls
4352 6433 Pls
1.000 UL
LTb
720 6576 N
720 480 L
4048 0 V
0 6096 V
-4048 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
